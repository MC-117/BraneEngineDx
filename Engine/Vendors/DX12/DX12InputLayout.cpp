#include "DX12InputLayout.h"

D3D12_INPUT_LAYOUT_DESC DX12InputLayout::layouts[4] = {};
bool DX12InputLayout::inited = false;

const D3D12_INPUT_LAYOUT_DESC& DX12InputLayout::getLayout(DX12InputLayoutType type)
{
	init();
	return layouts[(int)type];
}

void DX12InputLayout::init()
{
    if (inited)
        return;

	layouts[0].pInputElementDescs = NULL;
	layouts[0].NumElements = 0;

    static const D3D12_INPUT_ELEMENT_DESC meshDesc[5] = {
			{ "OBJID", 0, DXGI_FORMAT_R32_UINT, 0, 0, D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA, 1 },
			{ "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 1, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 2, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "NORMAL", 0, DXGI_FORMAT_R32G32B32_FLOAT, 3, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "SV_VertexID", 0, DXGI_FORMAT_R32_UINT, 4, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 }
	};
	layouts[1].pInputElementDescs = meshDesc;
	layouts[1].NumElements = 5;

	static const D3D12_INPUT_ELEMENT_DESC skeletonMeshDesc[7] = {
			{ "OBJID", 0, DXGI_FORMAT_R32_UINT, 0, 0, D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA, 1 },
			{ "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 1, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 2, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "NORMAL", 0, DXGI_FORMAT_R32G32B32_FLOAT, 3, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "BONEINDEX", 0, DXGI_FORMAT_R32G32B32A32_UINT, 4, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "BONEWEIGHT", 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 5, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "SV_VertexID", 0, DXGI_FORMAT_R32_UINT, 4, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 }
	};
	layouts[2].pInputElementDescs = skeletonMeshDesc;
	layouts[2].NumElements = 7;



	static const D3D12_INPUT_ELEMENT_DESC terrainDesc[3] = {
			{ "OBJID", 0, DXGI_FORMAT_R32_UINT, 0, 0, D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA, 1 },
			{ "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 1, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
			{ "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 2, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 }
	};
	layouts[3].pInputElementDescs = terrainDesc;
	layouts[3].NumElements = 3;

	inited = true;
}
