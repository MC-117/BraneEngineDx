#include "Bindings_Def.hmat"

struct TransformData
{
    float4x4 localToWorld;
    float3 worldScale;
    float boundScale;
    float3 localCenter;
    float localRadius;
    float3 localExtent;
    uint flag;
    uint updateFrame;
    uint objectIDHigh;
    uint objectIDLow;
    uint pad;
};

#define TRANSFORM_DATA_FLAG_DYNAMIC (1 << 0)
#define TRANSFORM_DATA_FLAG_NEG_SCALE (1 << 1)
#define TRANSFORM_DATA_FLAG_REC_DECAL (1 << 2)

StructuredBuffer<TransformData> Transforms : register(TRANS_BIND_INDEX);

uint getTransformCount()
{
    uint count, stride;
    Transforms.GetDimensions(count, stride);
    return count;
}

float4x4 getFinalMat(in uint insID)
{
    return Transforms[insID].localToWorld;
}

TransformData getTransformData(in uint insID)
{
    return Transforms[insID];
}

bool isStaticTransform(in TransformData data)
{
    return (data.flag & TRANSFORM_DATA_FLAG_DYNAMIC) == 0;
}

bool canReceiveDecal(in TransformData data)
{
    return (data.flag & TRANSFORM_DATA_FLAG_REC_DECAL) != 0;
}

uint getStencilValue(in TransformData data)
{
    return data.flag >> 24;
}