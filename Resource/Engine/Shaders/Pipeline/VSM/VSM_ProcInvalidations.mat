#material
#localsize 64 1 1
#compute
#include "../../lib/VirtualShadowMap_Def.hmat"
#include "../../lib/TransformData_Def.hmat"

cbuffer invalidationInfo
{
    int numUpdateInstances;
    int3 pad;
}

Buffer<uint> invalidationIndices;
RWStructuredBuffer<VSMPhysPageMetaData> outPrevPhysPageMetaData;

[numthreads(LOCAL_SIZE_X, LOCAL_SIZE_Y, LOCAL_SIZE_Z)]
void main(uint tid : SV_DispatchThreadID)
{
    if (tid >= numUpdateInstances)
        return;
    uint insID = numUpdateInstances == 0 ? tid : invalidationIndices[tid + 1];

    TransformData insData = getTransformData(insID);

    for (int vsmID = 0; vsmID <= vsmInfo.numShadowMapSlots; vsmID++) {
        VSMProjData projData = getVSMProjData(vsmID);

        bool isStaticCache = isStaticTransform(insData);
        uint invalidationFlags = (isStaticCache ? VSM_STATIC_UNCACHED_FLAG : VSM_DYNAMIC_UNCACHED_FLAG) << VSM_PHYSICAL_PAGE_INVALIDATION_FLAGS_SHIFT;

        FrustumCullData cullData = frustumCullBoxOrtho(
            insData.localCenter,
            insData.localExtent,
            -projData.worldCenter,
            insData.localToWorld,
            projData.viewOriginToClip);
        if (cullData.visiable) {
            int mipCount = (projData.clipmapCount <= 0) ? VSM_MAX_MIPS : 1;
            for (int mipLevel = 0; mipLevel < mipCount; mipLevel++) {
				int viewDim = int(uint(VSM_MAX_SIZE) >> mipLevel);
                ScreenRect rect = getScreenRect(int4(0, 0, viewDim, viewDim), cullData, 4);
                rect.depth += 1e-8f;

                uint4 rectPages = getPageRect(rect, projData.vsmID, mipLevel);
                uint flagMask = VSM_ALLOCATED_FLAG;
                if (overlapsAnyValidPage(projData.vsmID, mipLevel, rectPages, flagMask)) {
					uint4 rectPages = uint4(rect.pixels) >> VSM_LOG2_PAGE_SIZE;
                    uint pageTableLevelOffset = calcPageTableLevelOffset(projData.vsmID, mipLevel);
					for (uint y = rectPages.y; y <= rectPages.w; y++) {
						for (uint x = rectPages.x; x <= rectPages.z; x++) {
							uint pageFlagOffset = pageTableLevelOffset + calcPageOffsetInLevel(mipLevel, uint2(x, y));
							uint pageFlag = pageFlags[pageFlagOffset];

							if ((pageFlag & flagMask) == flagMask) {
								uint2 physAddress = vsmGetPhysicalPage(pageFlagOffset).physAddress;
								uint physPageIndex = physPageAddressToIndex(physAddress);
								InterlockedOr(outPrevPhysPageMetaData[physPageIndex].flags, invalidationFlags);
							}
						}
					}
                }
            }
        }
    }
}
